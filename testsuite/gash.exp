#!/usr/bin/expect --

#set argc [llength $argv]
#for {set I 0} {$I<$argc} {incr I} {
#    puts "arg $I: [lindex $argv $I]"
#}

#set timeout $argv

#expect "\n" {
#    send [string trimright "$expect_out(buffer)" "\n"]
#
#}

# Timeout reduced to 3 seconds
set timeout 3

# The name of this test and the command we will run
set test_name "Simple test"
set command_line "length 32"

# When verbose, tell the user what we are running
#if { $verbose > 1 } {
#    send_user "starting $command_line\n"
#}

# Run the program.
spawn $command_line

expect {
    # Check for any warning messages in the output first
    Warning {
        fail "$test_name: warning: $expect_out(buffer)"
    }

    # Check for any error messages
    ERROR {
        fail "$test_name: error: $expect_out(buffer)"
    }

    # The string indicating successful completion
    "Test complete" {
         pass "$test_name\n"
    }

    # EOF and timeout only come after everything else. EOF must be an error.
    eof {
        fail "$test_name: EOF\n"
    }

    # Timeout requires inspection to determine the cause of failure.
    timeout {
        unresolved "$test_name: timeout"
    }
}

